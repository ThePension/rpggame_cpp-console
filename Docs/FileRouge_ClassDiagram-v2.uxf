<diagram program="umletino" version="14.3.0"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>110</x><y>90</y><w>240</w><h>280</h></coordinates><panel_attributes>Room
--
- Width: int
- Heigth : int
- Player : Hero *
- ROPAttern : RoomObject[10][20] *
--
+ Room()
+ ~Room()
+ Update(char key) : void
+ Display() : void
+ CheckAround(int x, int y) : RoomObject *
+ GotoXY(int x, int y) : void
+ ShowPlayerStats() : void
+ ShowPlayerInventory() : void
+ KeyHelp() : void
+ GetPlayer() : Hero *
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>510</x><y>50</y><w>210</w><h>240</h></coordinates><panel_attributes>RoomObject
--
# PosX : int
# PosY : int
# Character : char
--
+ GetChar() const : char
+ GetX() const : int
+ GetY() const : int
+ SetX(int x) : void
+ SetY(int y) : void
+ GotoXY(int x, int y) : void
/+ virtual Show(int x, int y) : void/
/+ Interact(RoomObject *) : void/
/+ GetInventory() : list&lt;IItem*&gt;/
/+ DeleteInventory() : void/</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>550</x><y>420</y><w>210</w><h>140</h></coordinates><panel_attributes>Wall
--
+ Wall()
+ Wall(const Wall &amp;)
+ Wall(int X, int Y, char charac)
+ Show(int x, int y) : void
+ Interact(RoomObject *) : void
+ GetInventory() : list&lt;IItem*&gt;
+ DeleteInventory() : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>780</x><y>320</y><w>210</w><h>200</h></coordinates><panel_attributes>Chest
--
- Inventory : list&lt;IItem*&gt;
--
+ Chest()
+ Chest(int x, int y, char charac)
+ ~Chest()
+ SetChestContent(const list&lt;IItem*&gt;) : void
+ AddItem(IItem *) : void
+ Show(int x, int y) : void
+ Interact(RoomObject *) : void
+ GetInventory() : list&lt;IItem*&gt;
+ DeleteInventory() : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>380</x><y>286</y><w>220</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>200;10;10;120</additional_attributes></element><element><id>Relation</id><coordinates><x>660</x><y>286</y><w>240</w><h>50</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;220;30</additional_attributes></element><element><id>UMLClass</id><coordinates><x>980</x><y>820</y><w>250</w><h>200</h></coordinates><panel_attributes>Weapon
--
# Level = 0 : int
# XP = 0 : int
--
+ Weapon()
+ Weapon(string name, bool CanBeStacked)
/+ virtual Stats : void/
/+ virtual GetName() const : string/
+ GetFeature() : string
+ GetLevel() : int
+ AddXP() : void
+ LevelUp() : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1170</x><y>590</y><w>210</w><h>130</h></coordinates><panel_attributes>IItem
--
# Name : string
# CanBeStacked : bool
--
+ IItem()
+ IItem(string name, bool CanBeStacked)
/+ virtual GetName const : string/
/+ virtual GetFeature() const : string/</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1100</x><y>716</y><w>150</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>130;10;10;100</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1350</x><y>820</y><w>210</w><h>130</h></coordinates><panel_attributes>Potion
--
- HealAmount : int
--
+ Potion(int HealAmount, string name, bool canBeStacked)
+ GetName() : string
+ GetFeature() : string
+ GetHealAmount() : int</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1300</x><y>716</y><w>170</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;150;100</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1240</x><y>1130</y><w>210</w><h>130</h></coordinates><panel_attributes>Dagger
--
- Damage: int
--
+ Dagger()
+ Stats() : void
+ GetDamage() const: int
+ GetName() const : string</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>870</x><y>1016</y><w>200</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>180;10;10;110</additional_attributes></element><element><id>UMLClass</id><coordinates><x>690</x><y>1130</y><w>210</w><h>130</h></coordinates><panel_attributes>Sword
--
- Damage : int
--
+ Sword()
+ Sword(int damage, string name)
+ Stats() : void
+ GetDamage() const: int
+ GetName() const : string</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1060</x><y>1016</y><w>50</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>30;10;10;110</additional_attributes></element><element><id>UMLClass</id><coordinates><x>970</x><y>1130</y><w>210</w><h>130</h></coordinates><panel_attributes>Staff
--
- HealAmount: int
--
+ Staff()
+ Staff(int healAmount, string name)
+ Stats() : void
+ GetHealAmount() const: int
+ GetName() const : string</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>1120</x><y>1016</y><w>230</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;210;110</additional_attributes></element><element><id>UMLClass</id><coordinates><x>22</x><y>410</y><w>500</w><h>440</h></coordinates><panel_attributes>Hero
--
# Strength : int
# Agility : int
# Intelligence : int
# HP : double
# Name : string
# Inventory : Inventory
# CurrentWeapon : Weapon *
--
+ Hero()
+ Hero(const Hero &amp;)
+ Hero(int x, int y, char charac, int strength, int agility, int intelligence, double hp, string name)
+ ~Hero()
/+ virtual Show(int x, int y) : void/
/+ virtual Interact(const Hero &amp;) : void/
+ virtual Interact(RoomObject *) : void
+ Interact(IItem *) : void
+ GetInventory() : lst&lt;IItem*&gt;
+ GetInventoryItemAtIndex(int i) : IItem *
+ DeleteInventory() : void
+ AddItems(list&lt;IItem*&gt;) : void
+ AddItem(IItem *) : void
+ ShowInventory(int x, int y) : void
+ GetAgility() const : int
+ GetStrength() const : int
+ GetIntelligence() const : int
+ GetHP() const : double
+ GetName() const : string
 ! Op√©rateurs !
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>42</x><y>920</y><w>210</w><h>70</h></coordinates><panel_attributes>Nordic
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>302</x><y>910</y><w>210</w><h>70</h></coordinates><panel_attributes>Wizard
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>302</x><y>1050</y><w>210</w><h>70</h></coordinates><panel_attributes>Necromancer
--
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>130</x><y>846</y><w>40</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>20;10;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>390</x><y>846</y><w>40</w><h>80</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>20;10;10;60</additional_attributes></element><element><id>Relation</id><coordinates><x>380</x><y>976</y><w>40</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;20;70</additional_attributes></element><element><id>Relation</id><coordinates><x>600</x><y>286</y><w>90</w><h>150</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;70;130</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1062</x><y>320</y><w>210</w><h>110</h></coordinates><panel_attributes>TradingSystem
--
+ TradingSystem()
+ Init(Merchant *, Room &amp;) : void
+ Init(Hero *, Room &amp;) : void
+ DrawVertLine(int x, int y) : void
+ GotoXY(int x, int y) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1302</x><y>320</y><w>250</w><h>140</h></coordinates><panel_attributes>Log
--
+ Log()
+ TradeLog(Hero *, Iitem *, Merchant *) : void
+ TradeLog(Merchant *, Iitem *, Hero *) : void
+ TradeLog(Hero *, Iitem *, Hero *) : void
+ ErrorLog(exception) : void
+ ErrorLog(string) : void
+ getCurrentDateTime() : string</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>702</x><y>580</y><w>250</w><h>220</h></coordinates><panel_attributes>Inventory
--
- Size : int
- Content : list&lt;Iitem*&gt;
--
+ Inventory()
+ ~Inventory()
+ AddItems(const list&lt;Iitem*&gt;) : void
+ AddItem(Iitem *) : void
+ GotoXY(int x, int y) : void
+ GetSize() : int
+ GetContent() : list&lt;Iitem*&gt;
+ GetInventoryItemAtIndex(int i) : IItem *
+ Show(string str, int index, int x, int y) : void
+ DeleteInventory() : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>512</x><y>610</y><w>210</w><h>50</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;190;30</additional_attributes></element><element><id>Relation</id><coordinates><x>212</x><y>360</y><w>30</w><h>70</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>Relation</id><coordinates><x>942</x><y>630</y><w>240</w><h>40</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;220;20</additional_attributes></element><element><id>Relation</id><coordinates><x>522</x><y>800</y><w>480</w><h>110</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;460;90</additional_attributes></element></diagram>